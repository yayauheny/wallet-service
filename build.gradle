plugins {
    id 'war'
    id "io.freefair.lombok" version "8.3"
}
group = 'yayauheny'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.5.5.Final"
    mockitoVersion = "5.6.0"
    jacksonVersion = "2.15.3"
    jjwtVersion = "0.12.3"
}

dependencies {
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"

    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    implementation 'at.favre.lib:bcrypt:0.10.2'

    implementation 'org.liquibase:liquibase-core:4.24.0'
    runtimeOnly 'org.postgresql:postgresql:42.6.0'

    implementation platform('org.testcontainers:testcontainers-bom:1.19.1')
    testImplementation 'org.testcontainers:postgresql'
    testImplementation "org.testcontainers:junit-jupiter"

    testImplementation(platform('org.junit:junit-bom:5.10.0'))
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation 'org.assertj:assertj-core:3.24.2'
}

test {
    exclude 'io/ylab/**'
    useJUnitPlatform()
}